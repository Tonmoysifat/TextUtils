{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Accordion.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","Link","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","NavLink","navInfo","isActive","classes","active","aria-current","nav_link_1","nav_link_2","role","aria-checked","onClick","darkModeToggle","htmlFor","TextForm","styleElement","document","getElementById","head","appendChild","innerHTML","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","rows","value","placeholder","onChange","event","target","backgroundColor","borderColor","disabled","length","upperCaseText","toUpperCase","showAlert","lowerCaseText","toLowerCase","arr","split","i","charAt","slice","str2","join","console","log","select","navigator","clipboard","writeText","then","getSelection","removeAllRanges","catch","error","successful","execCommand","filter","element","trim","Accordion","mystyle","data-bs-parent","prototypes","PropTypes","string","isRequired","defaultProps","Alert","height","alert","word","lower","capitalize","message","App","setMode","_useState3","_useState4","setAlert","setTimeout","Router","body","Routes","Route","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.0ef21b8e.chunk.js","sourcesContent":["// import \"../App.css\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport classes from \"../App.css\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav\r\n        className={`navbar navbar-expand-md navbar-${props.mode} bg-${props.mode} `}\r\n      >\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            {props.title}\r\n          </Link>\r\n\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  className={`nav-link ${(navInfo) =>\r\n                    navInfo.isActive ? classes.active : \"\"}`}\r\n                  aria-current=\"page\"\r\n                  to=\"/\"\r\n                >\r\n                  {\" \"}\r\n                  {props.nav_link_1}\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  className={`nav-link ${(navInfo) =>\r\n                    navInfo.isActive ? classes.active : \"\"}`}\r\n                  aria-current=\"page\"\r\n                  to=\"/about\"\r\n                >\r\n                  {\" \"}\r\n                  {props.nav_link_2}\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n            {/* <div className=\"d-flex\">\r\n              <div\r\n                className=\"bg-primary rounded me-2\"\r\n                onClick={() => {\r\n                  props.darkModeToggle(\"primary\");\r\n                }}\r\n                style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\" }}\r\n              ></div>\r\n              <div\r\n                className=\"bg-danger rounded me-2\"\r\n                onClick={() => {\r\n                  props.darkModeToggle(\"danger\");\r\n                }}\r\n                style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\" }}\r\n              ></div>\r\n              <div\r\n                className=\"bg-success rounded me-2\"\r\n                onClick={() => {\r\n                  props.darkModeToggle(\"success\");\r\n                }}\r\n                style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\" }}\r\n              ></div>\r\n              <div\r\n                className=\"bg-info rounded me-2\"\r\n                onClick={() => {\r\n                  props.darkModeToggle(\"info\");\r\n                }}\r\n                style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\" }}\r\n              ></div>\r\n              <div\r\n                className=\"bg-light rounded me-2\"\r\n                onClick={() => {\r\n                  props.darkModeToggle(\"light\");\r\n                }}\r\n                style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\",border:\"2px solid grey\" }}\r\n              ></div>\r\n              <div\r\n                className=\"bg-dark border-2 rounded me-2\"\r\n                onClick={() => {\r\n                  props.darkModeToggle(\"dark\");\r\n                }}\r\n                style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\" }}\r\n              ></div>\r\n            </div> */}\r\n\r\n            <div className=\"form-check form-switch\">\r\n              <input\r\n                className=\"form-check-input me-2\"\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                aria-checked\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.darkModeToggle}\r\n                // onClick={() => {\r\n                //   props.darkModeToggle(null);\r\n                // }}\r\n              />\r\n              <label\r\n                className={`form-check-label text-${\r\n                  props.mode === \"light\" ? \"dark\" : \"light\"\r\n                }`}\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                {/* Enable dark mood */}\r\n                {props.mode===\"dark\" ? \"Disable dark mood\":\"Enable dark mood\"}\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.prototypes = {\r\n  title: PropTypes.string.isRequired,\r\n  nav_link_1: PropTypes.string,\r\n  nav_link_2: PropTypes.string,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"TextUtils\",\r\n  nav_link_1: \"Home\",\r\n  nav_link_2: \"About Us\",\r\n};\r\n","import \"../App.css\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  var styleElement = document.getElementById(\"placeholderStyle\");\r\n  if (props.mode === \"dark\") {\r\n    if (!styleElement) {\r\n      styleElement = document.createElement(\"style\");\r\n      styleElement.id = \"placeholderStyle\";\r\n      document.head.appendChild(styleElement);\r\n    }\r\n    styleElement.innerHTML =\r\n      \"#exampleFormControlTextarea1::placeholder { color: white; }\";\r\n  } else {\r\n    if (!styleElement) {\r\n      styleElement = document.createElement(\"style\");\r\n      styleElement.id = \"placeholderStyle\";\r\n      document.head.appendChild(styleElement);\r\n    }\r\n    styleElement.innerHTML =\r\n      \"#exampleFormControlTextarea1::placeholder { color: black; }\";\r\n  }\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const convertToUpperCase = () => {\r\n    let upperCaseText = text.toUpperCase();\r\n    setText(upperCaseText);\r\n    props.showAlert(\"Converted to upperCase\", \"success\");\r\n  };\r\n\r\n  const convertToLowerCase = () => {\r\n    let lowerCaseText = text.toLowerCase();\r\n    setText(lowerCaseText);\r\n    props.showAlert(\"Converted to lowerCase\", \"success\");\r\n  };\r\n  const convertSentenceCase = () => {\r\n    // let fz=text.Title;\r\n    // setText(fz);\r\n\r\n    const arr = text.split(\".\");\r\n    //loop through each element of the array and capitalize the first letter.\r\n\r\n    for (var i = 0; i < arr.length; i++) {\r\n      arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1).toLowerCase();\r\n    }\r\n\r\n    //Join all the elements of the array back into a string\r\n    //using a blankspace as a separator\r\n    const str2 = arr.join(\". \");\r\n    console.log(str2);\r\n    setText(str2);\r\n    props.showAlert(\"Converted to SentenceCase\", \"success\");\r\n  };\r\n\r\n  //   const copyToClipBoard=()=>{\r\n  //    var text=document.getElementById(\"exampleFormControlTextarea1\");\r\n  //    text.select();\r\n  //    navigator.clipboard.writeText(text.value);\r\n  // }\r\n\r\n  // const copyToClipBoard = () => {\r\n  //   var text = document.getElementById(\"exampleFormControlTextarea1\");\r\n  //   text.select();\r\n  //   if (navigator.clipboard) {\r\n  //     navigator.clipboard.writeText(text.value);\r\n  //     console.log(\"Text copied to clipboard\");\r\n  //   } else {\r\n  //     console.log(\"Clipboard not available\");\r\n  //   }\r\n  // }\r\n\r\n  const copyToClipBoard = () => {\r\n    var text = document.getElementById(\"exampleFormControlTextarea1\");\r\n    text.select();\r\n    if (navigator.clipboard) {\r\n      navigator.clipboard\r\n        .writeText(text.value)\r\n\r\n        .then(() => {\r\n          document.getSelection().removeAllRanges();\r\n          props.showAlert(\"Text copied to clipboard\", \"success\");\r\n          console.log(\"Text copied to clipboard\");\r\n        })\r\n        .catch((error) => console.error(\"Error copying text: \", error));\r\n    } else {\r\n      try {\r\n        var successful = document.execCommand(\"copy\");\r\n        document.getSelection().removeAllRanges();\r\n        if (successful) {\r\n          console.log(\"Text copied to clipboard\");\r\n        } else {\r\n          console.error(\"Error copying text\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error copying text: \", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h2 className=\"mb-4 text-center text-md-start\">{props.heading}</h2>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control shadow\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"10\"\r\n            value={text}\r\n            placeholder=\"Enter your text\"\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor:\r\n                props.mode === \"dark\" ? \"#6960a3d6\" : \"#3b3e4029\",\r\n              borderColor: props.mode === \"dark\" ? \"grey\" : \"grey\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"tbtn\">\r\n          <button\r\n            disabled={text.length === 0}\r\n            className=\"btn btn-primary  mt-3 \"\r\n            onClick={convertToUpperCase}\r\n          >\r\n             UpperCase\r\n          </button>\r\n          <button\r\n            disabled={text.length === 0}\r\n            className=\"btn btn-primary ms-2 mt-3 \"\r\n            onClick={convertToLowerCase}\r\n          >\r\n             LowerCase\r\n          </button>\r\n          <button\r\n            disabled={text.length === 0}\r\n            className=\"btn btn-primary ms-2 mt-3 \"\r\n            onClick={convertSentenceCase}\r\n          >\r\n             SentenceCase\r\n          </button>\r\n          <button\r\n            disabled={text.length === 0}\r\n            className=\"btn btn-primary ms-2 mt-3 \"\r\n            onClick={copyToClipBoard}\r\n          >\r\n            CopyText\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"container my-4\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h2>Your text summary</h2>\r\n        {/* <p>{text.split(\" \").length} words and {text.length} characters</p>  */}\r\n        <p>\r\n          {/* {text.trim() !== \"\" ? text.trim().split(\" \").length : 0} words and{\" \"}\r\n          {text.length} characters */}\r\n          {\r\n            text.split(/\\s+/).filter((element) => {\r\n              return element.length !== 0;\r\n            }).length\r\n          }{\" \"}\r\n          words and {text.length} characters\r\n        </p>\r\n        <p>\r\n          {0.008 * (text.trim() !== \"\" ? text.trim().split(\" \").length : 0)}{\" \"}\r\n          Minutes to read\r\n        </p>\r\n        <h2>Preview</h2>\r\n        <p>\r\n          {text.length > 0\r\n            ? text\r\n            : \"Enter your text in the above box to preview here\"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nexport default function Accordion(props) {\r\n  let mystyle={\r\n    color:props.mode===\"dark\"?\"white\":\"black\",\r\n    backgroundColor:props.mode===\"dark\"?\"#3b3e40cc\":\"white\",\r\n    borderColor:props.mode===\"dark\"?\"grey\":\"grey\"\r\n\r\n  }\r\n\r\nreturn (\r\n  <div className=\"container\"  style={{color:props.mode===\"dark\"?\"white\":\"black\"}}>\r\n    <h2 className=\"my-3\">About Us</h2>\r\n    <div className=\"accordion\" id=\"accordionExample\">\r\n      <div className=\"accordion-item\"  style={mystyle}>\r\n        <h2 className=\"accordion-header\" >\r\n          <button\r\n            className=\"accordion-button\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#collapseOne\"\r\n            aria-expanded=\"true\"\r\n            aria-controls=\"collapseOne\"\r\n            style={mystyle}\r\n            \r\n          >\r\n            Accordion Item #1\r\n          </button>\r\n        </h2>\r\n        <div\r\n          id=\"collapseOne\"\r\n          className=\"accordion-collapse collapse show\"\r\n          data-bs-parent=\"#accordionExample\"\r\n        >\r\n          <div className=\"accordion-body\">\r\n            <strong>This is the first item's accordion body.</strong> It is\r\n            shown by default, until the collapse plugin adds the appropriate\r\n            classes that we use to style each element. These classes control\r\n            the overall appearance, as well as the showing and hiding via CSS\r\n            transitions. You can modify any of this with custom CSS or\r\n            overriding our default variables. It's also worth noting that just\r\n            about any HTML can go within the <code>.accordion-body</code>,\r\n            though the transition does limit overflow.\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"accordion-item\" style={mystyle}>\r\n        <h2 className=\"accordion-header\">\r\n          <button\r\n            className=\"accordion-button collapsed\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#collapseTwo\"\r\n            aria-expanded=\"false\"\r\n            aria-controls=\"collapseTwo\"\r\n            style={mystyle}\r\n          >\r\n            Accordion Item #2\r\n          </button>\r\n        </h2>\r\n        <div\r\n          id=\"collapseTwo\"\r\n          className=\"accordion-collapse collapse\"\r\n          data-bs-parent=\"#accordionExample\"\r\n        >\r\n          <div className=\"accordion-body\">\r\n            <strong>This is the second item's accordion body.</strong> It is\r\n            hidden by default, until the collapse plugin adds the appropriate\r\n            classes that we use to style each element. These classes control\r\n            the overall appearance, as well as the showing and hiding via CSS\r\n            transitions. You can modify any of this with custom CSS or\r\n            overriding our default variables. It's also worth noting that just\r\n            about any HTML can go within the <code>.accordion-body</code>,\r\n            though the transition does limit overflow.\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"accordion-item\"  style={mystyle}>\r\n        <h2 className=\"accordion-header\">\r\n          <button\r\n            className=\"accordion-button collapsed\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#collapseThree\"\r\n            aria-expanded=\"false\"\r\n            aria-controls=\"collapseThree\"\r\n            style={mystyle}\r\n          >\r\n            Accordion Item #3\r\n          </button>\r\n        </h2>\r\n        <div\r\n          id=\"collapseThree\"\r\n          className=\"accordion-collapse collapse\"\r\n          data-bs-parent=\"#accordionExample\"\r\n        >\r\n          <div className=\"accordion-body\">\r\n            <strong>This is the third item's accordion body.</strong> It is\r\n            hidden by default, until the collapse plugin adds the appropriate\r\n            classes that we use to style each element. These classes control\r\n            the overall appearance, as well as the showing and hiding via CSS\r\n            transitions. You can modify any of this with custom CSS or\r\n            overriding our default variables. It's also worth noting that just\r\n            about any HTML can go within the <code>.accordion-body</code>,\r\n            though the transition does limit overflow.\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n}\r\n","import React from \"react\";\r\n// const [alert, setAlert] = useState(null);\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    <div style={{height:\"50px\"}}>\r\n { props.alert && \r\n      \r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          {capitalize(props.alert.type)} :<strong>{props.alert.message}</strong>\r\n          {/* <button\r\n            type=\"button\"\r\n            className=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          ></button> */}\r\n        </div>}\r\n      \r\n      </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Accordion from \"./components/Accordion\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Routes, Route, } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  // const removeBodyClasses=()=>{\n  //   document.body.classList.remove(\"bg-light\");\n  //   document.body.classList.remove(\"bg-dark\");\n  //   document.body.classList.remove(\"bg-primary\");\n  //   document.body.classList.remove(\"bg-danger\");\n  //   document.body.classList.remove(\"bg-success\");\n  //   document.body.classList.remove(\"bg-info\");\n  // }\n  const darkModeToggle = () => {\n    // removeBodyClasses();\n    // console.log(cls);\n    // document.body.classList.add(\"bg-\"+cls)\n    // let form_check_label = document.querySelector(\".form-check-label\");\n \n    if (mode === \"light\") {\n      setMode(\"dark\");\n      // form_check_label.classList.add(\"text-light\")\n      // form_check_label.innerHTML = \"Disable dark mood\";\n      document.body.style.backgroundColor = \"#071031\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      // document.title = \"TextUtils/Dark-mood\";\n      // setInterval(() => {\n      //   document.title=\"Install TextUtils\"\n      // }, 1500);\n      // setInterval(() => {\n      //   document.title=\"Click here to get $1000\"\n      // }, 2000);\n    } else {\n      setMode(\"light\");\n      // form_check_label.classList.remove(\"text-light\")\n      // form_check_label.innerHTML = \"Enable dark mood\";\n      document.body.style.backgroundColor = \"#d6d6d685\";\n      showAlert(\"Dark mode has been disabled\", \"success\");\n      // document.title = \"TextUtils\";\n    }\n  };\n\n  return (\n    <>\n      <Router>\n        <Navbar mode={mode} darkModeToggle={darkModeToggle} />\n        <Alert alert={alert} />\n        {/* <Navbar title=\"TextUtils\" nav_link_1=\"Home\" nav_link_2=\"About Us\"/> */}\n        <div className=\"container my-4\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <TextForm\n                  heading=\"Try TextUtils - Word counter, Character counter, Copy text\"\n                  mode={mode}\n                  showAlert={showAlert}\n                />\n              }\n            />\n            <Route path=\"/about\" element={<Accordion mode={mode} />} />\n          </Routes>\n        </div>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}